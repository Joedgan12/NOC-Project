name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./apps/backend

    - name: Run linter
      run: npm run lint
      working-directory: ./apps/backend

    - name: Run tests
      run: npm test
      working-directory: ./apps/backend

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/noc-backend:latest ./apps/backend
        docker push ${{ secrets.DOCKER_USERNAME }}/noc-backend:latest

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/noc-backend:latest
          docker stop noc-backend || true
          docker rm noc-backend || true
          docker run -d --name noc-backend -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/noc-backend:latest
        EOF
